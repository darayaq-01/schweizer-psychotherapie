---
import 'leaflet/dist/leaflet.css';
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'div'> {
    coordinates?: [number, number];
    zoom?: number;
    containerClass?: string;
}

const DEFAULT_COORDINATES: [number, number] = [51.340468, 12.374739]; // Leipzig
const DEFAULT_ZOOM = 16; // Zoom level 0-20

const {
    coordinates = DEFAULT_COORDINATES,
    zoom = DEFAULT_ZOOM,
    containerClass = 'max-w-2xl  my-8',
} = Astro.props as Props;
---

<div
    class:list={[containerClass, 'shadow-lg rounded-lg overflow-hidden']}
    id='map'
    style='height: 400px; width: 100%;'
    data-lat={coordinates[0]}
    data-lng={coordinates[1]}
    data-zoom={zoom}
>
</div>

<script>
    import L from 'leaflet';

    const mapElement = document.getElementById('map');
    if (!mapElement) throw new Error('Map element not found');

    const lat = Number(mapElement.dataset.lat) || 0;
    const lng = Number(mapElement.dataset.lng) || 0;
    const zoom = Number(mapElement.dataset.zoom) || 16;

    const map = L.map(mapElement).setView([lat, lng], zoom);

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution:
            '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
    }).addTo(map);

    const icon = L.icon({
        iconUrl: '/images/marker-icon.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowUrl: '/images/marker-shadow.png',
        shadowSize: [41, 41],
    });
    const marker = L.marker([lat, lng]).addTo(map);

    marker
        .bindPopup(
            '<b>Erika Schweizer</b><br /> <em>Heilpraktikerin fuÌˆr Psychotherapie (HPG)</em><br />'
        )
        .openPopup();
</script>
<script
    src='https://unpkg.com/leaflet@1.9.4/dist/leaflet.js'
    integrity='sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo='
    crossorigin=''></script>
